def chartrepoCredentialsId = "8fb36847-0c65-435c-a118-c3059cca7d51";
def containerName = "helm";

podTemplate(inheritFrom: "jenkins-agent", cloud: "kubernetes") {

  node(POD_LABEL) {
    stage("Helm Add Repo") {
      container(containerName) {
        script {
          withCredentials([usernamePassword(credentialsId: chartrepoCredentialsId, passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
            sh "helm version"
            sh """
                helm repo add devchartrepo https://harbor.leryn.top/chartrepo/library \
                  --username=${USERNAME} --password=${PASSWORD}
            """
            sh "helm repo update"
          }
        }
      }
    }
    stage("Git Clone Project") {
      checkout([
        $class: "GitSCM",
        branches: [
          [ name: "main" ]
        ],
        extensions: [],
        userRemoteConfigs: [
          [ url: "https://github.com/leryn1122/sample-helm-chart.git" ]
        ]
      ])
    }
    stage("Helm Dry-run") {
      container(containerName) {
        sh "helm dependency update"
        sh "helm lint ."
        // Skipped if the chart type is NOT `application`
        def chart = readYaml file: "Chart.yaml"
        if (chart.type == 'application') {
            sh "helm template sample . --debug -n sample 2>&1"
        }
      }
    }
    stage("Helm Package") {
      container(containerName) {
        sh "helm package ."
      }
    }
    stage("Helm Push Remote") {
      container(containerName) {
        withCredentials([usernamePassword(credentialsId: chartrepoCredentialsId, passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
          sh "helm cm-push *.tgz devchartrepo"
          sh "rm *.tgz"
        }
      }
    }
  }
}